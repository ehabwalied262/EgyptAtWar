---
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const problems = await getCollection('problems');
  const paths = [];

  for (const problem of problems) {
    const articles = await getCollection('articles', (entry) => entry.id.startsWith(`${problem.data.folder}/`));
    articles.forEach((article) => {
      const articleSlug = article.slug.split('/')[1];
      console.log(`Generating path: /problem/${problem.slug}/${articleSlug}`);
      paths.push({
        params: {
          problem: problem.slug,
          slug: articleSlug,
        },
        props: { article },
      });
    });
  }

  return paths;
}

const { article } = Astro.props;

// Calculate reading time
const wordCount = article.body.split(/\s+/).length;
const readingTime = Math.ceil(wordCount / 200);

// Extract table of contents (h2, h3)
const headings = [];
const headingRegex = /<h[2-3][^>]*id="([^"]*)"[^>]*>(.*?)<\/h[2-3]>/g;
let match;
while ((match = headingRegex.exec(article.body)) !== null) {
  headings.push({ id: match[1], text: match[2], level: match[0].startsWith('<h2') ? 2 : 3 });
}

// Get related articles
const relatedArticles = (await getCollection('articles', (entry) => entry.id.startsWith(`${Astro.params.problem}/`)))
  .filter((a) => a.slug !== article.slug)
  .slice(0, 3);
---
<html lang="ar" dir="rtl">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{article.data.title} - موقع المقالات</title>
    <meta name="description" content={article.data.description} />
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;700&display=swap" rel="stylesheet" />
     <!-- Add Font Awesome CDN -->
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  </head>

  <body class="bg-gray-900 text-white min-h-screen font-cairo transition-colors duration-500" id="body">
    <!-- Loading Spinner -->
    <div id="loading" class="fixed inset-0 bg-gray-900 flex items-center justify-center z-50">
      <div class="w-12 h-12 border-4 border-yellow-400 border-t-transparent rounded-full animate-spin"></div>
    </div>

    <!-- Header -->
    <header class="bg-gray-800 py-4 shadow-md transition-colors duration-500">
      <div class="max-w-5xl mx-auto px-4 flex justify-between items-center">
        <h2 class="text-2xl font-bold text-white">موقع المقالات</h2>
        <div class="flex gap-4 items-center">
          <button id="theme-toggle" class="text-white hover:text-yellow-400 text-sm md:text-base">☀️/🌙</button>
          <a href={`/problem/${Astro.params.problem}`} class="text-yellow-400 hover:underline text-sm md:text-base">رجوع للمشكلة</a>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <section class="py-8 md:py-12">
      <div class="max-w-5xl mx-auto px-4">
        <h1 class="text-3xl md:text-4xl font-bold text-center mb-6 md:mb-12 text-yellow-400">{article.data.title}</h1>
        <div class="text-sm md:text-base text-gray-400 text-center mb-8 flex justify-center gap-4 flex-wrap">
          <span>{article.data.date} - بقلم {article.data.author}</span>
          <span>زمن القراءة: تقريبًا {readingTime} دقيقة</span>
          <span>عدد القراء: {article.data.views || 'غير متوفر'}</span>
        </div>

        <!-- Table of Contents -->
        {headings.length > 0 && (
          <div class="bg-gray-800 p-4 rounded-lg mb-8 transition-colors duration-500">
            <h2 class="text-lg md:text-xl font-bold mb-4">فهرس المحتويات</h2>
            <ul class="list-disc pr-6">
              {headings.map((heading) => (
                <li class={heading.level === 3 ? 'pr-4' : ''}>
                  <a href={`#${heading.id}`} class="text-yellow-400 hover:underline">{heading.text}</a>
                </li>
              ))}
            </ul>
          </div>
        )}

        <div class="flex flex-col md:flex-row gap-6 md:gap-8">
          <div class="md:w-1/3 flex-shrink-0">
            <img
              src={article.data.image}
              alt={article.data.title}
              loading="lazy"
              class="w-full h-64 md:h-96 object-cover rounded-lg shadow-md transition-transform duration-300 hover:scale-105"
            />
          </div>
          <div class="md:w-2/3">
            <p class="text-base md:text-lg text-white mb-6 md:mb-8">{article.data.description}</p>
            <div class="prose prose-invert max-w-none" set:html={article.body}></div>
            <!-- Interaction Stats -->
            <div class="flex gap-4 mt-8 items-center">
              <button id="like-btn" class="flex items-center gap-2 text-gray-400 hover:text-red-400 text-lg">
                <span class="text-2xl">👍</span> <span id="like-count">0</span> <span class="text-sm">إعجاب</span>
              </button>
              <span class="text-gray-400">التعليقات: 0</span>
            </div>
            <!-- Share Buttons with Font Awesome Icons -->
            <div class="flex gap-4 mt-4">
              <a href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(Astro.url)}`} class="text-yellow-400 hover:text-yellow-300">
                <i class="fab fa-facebook-f fa-lg"></i>
              </a>
              <a href={`https://twitter.com/intent/tweet?url=${encodeURIComponent(Astro.url)}&text=${article.data.title}`} class="text-yellow-400 hover:text-yellow-300">
                <i class="fab fa-x-twitter fa-lg"></i>
              </a>
              <a href={`https://www.tiktok.com/upload?redirect_url=${encodeURIComponent(Astro.url)}`} class="text-yellow-400 hover:text-yellow-300">
                <i class="fab fa-tiktok fa-lg"></i>
              </a>
              <a href={`https://www.instagram.com/?url=${encodeURIComponent(Astro.url)}`} class="text-yellow-400 hover:text-yellow-300">
                <i class="fab fa-instagram fa-lg"></i>
              </a>
            </div>
          </div>
        </div>

        <!-- Related Articles -->
        {relatedArticles.length > 0 && (
          <div class="mt-12">
            <h2 class="text-xl md:text-2xl font-bold mb-6">اقرأ أيضًا</h2>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              {relatedArticles.map((related) => (
                <a href={`/problem/${Astro.params.problem}/${related.slug.split('/')[1]}`} class="bg-gray-800 p-4 rounded-lg hover:bg-gray-700 transition-colors duration-500">
                  <img src={related.data.image} alt={related.data.title} class="w-full h-40 object-cover rounded-md mb-4" />
                  <h3 class="text-lg font-bold">{related.data.title}</h3>
                  <p class="text-sm text-gray-400">{related.data.description.slice(0, 100)}...</p>
                </a>
              ))}
            </div>
          </div>
        )}
      </div>
    </section>

    <!-- Footer -->
    <footer class="bg-gray-800 py-4 mt-12 transition-colors duration-500">
      <div class="max-w-5xl mx-auto px-4 text-center text-gray-400 text-sm md:text-base">
        <p>© 2025 موقع المقالات. جميع الحقوق محفوظة.</p>
        <div class="flex justify-center gap-4 mt-2">
          <a href="/about" class="hover:text-yellow-400">عن الموقع</a>
          <a href="/contact" class="hover:text-yellow-400">اتصل بنا</a>
        </div>
      </div>
    </footer>

    <!-- Theme Toggle and Like Button Script -->
    <script>
      // Pass Astro variables to client-side
      const articleData = {
        problem: "{Astro.params.problem}",
        slug: "{Astro.params.slug}",
        url: "{Astro.url}"
      };

      // Theme Toggle
      const body = document.getElementById('body');
      const themeToggle = document.getElementById('theme-toggle');
      const isDark = localStorage.getItem('theme') !== 'light';
      if (isDark) {
        body.classList.add('bg-gray-900', 'text-white');
      } else {
        body.classList.add('bg-light', 'text-gray-900');
      }
      themeToggle.textContent = isDark ? '☀️' : '🌙';
      themeToggle.addEventListener('click', () => {
        if (body.classList.contains('bg-gray-900')) {
          body.classList.replace('bg-gray-900', 'bg-light');
          body.classList.replace('text-white', 'text-gray-900');
          localStorage.setItem('theme', 'light');
          themeToggle.textContent = '🌙';
        } else {
          body.classList.replace('bg-light', 'bg-gray-900');
          body.classList.replace('text-gray-900', 'text-white');
          localStorage.setItem('theme', 'dark');
          themeToggle.textContent = '☀️';
        }
      });

      // Like Button (Single Click)
      const likeBtn = document.getElementById('like-btn');
      const likeCount = document.getElementById('like-count');
      const articleId = `${articleData.problem}-${articleData.slug}`;
      let hasLiked = localStorage.getItem(`liked-${articleId}`) === 'true';
      let likes = parseInt(localStorage.getItem(`likes-${articleId}`) || '0');
      likeCount.textContent = likes;
      if (hasLiked) {
        likeBtn.classList.add('text-red-400', 'pointer-events-none');
      }
      likeBtn.addEventListener('click', () => {
        if (!hasLiked) {
          likes++;
          likeCount.textContent = likes;
          likeBtn.classList.add('text-red-400', 'pointer-events-none');
          localStorage.setItem(`likes-${articleId}`, likes);
          localStorage.setItem(`liked-${articleId}`, 'true');
          hasLiked = true;
        }
      });

      // Hide Loading Spinner
      const loadingDiv = document.getElementById('loading');
      if (document.readyState === 'complete') {
        loadingDiv.style.display = 'none';
      } else {
        window.addEventListener('load', () => {
          loadingDiv.style.display = 'none';
        });
      }
    </script>
  </body>
</html>

<style>
  /* Base Styles */
  .font-cairo {
    font-family: 'Cairo', sans-serif;
  }

  /* Custom Light Theme */
  .bg-light {
    background-color: #eae2b7;
  }
  .bg-light .bg-gray-800 { background-color: #d4c99e; }
  .bg-light .text-gray-400 { color: #4b5563; }
  .bg-light .bg-gray-700 { background-color: #c9bf8e; }
  .bg-light .prose-invert { color: #1f2937; }

  /* Spinner */
  @keyframes spin {
    to { transform: rotate(360deg); }
  }
  .animate-spin {
    animation: spin 1s linear infinite;
  }

  /* Responsiveness for Small Screens */
  @media (max-width: 767px) {
    .flex-col { flex-direction: column; }
    img { height: 16rem; max-width: 100%; }
    h1 { font-size: 1.75rem; margin-bottom: 1.5rem; }
    p { font-size: 0.875rem; line-height: 1.5; }
    .prose { font-size: 0.875rem; line-height: 1.6; }
    .prose h2 { font-size: 1.25rem; }
    .prose h3 { font-size: 1rem; }
    .gap-8 { gap: 1.5rem; }
    .py-12 { padding-top: 2rem; padding-bottom: 2rem; }
    .px-4 { padding-left: 1rem; padding-right: 1rem; }
    .text-2xl { font-size: 1.5rem; }
    .grid-cols-3 { grid-template-columns: 1fr; }
  }

  /* Medium Screens (Tablets) */
  @media (min-width: 768px) and (max-width: 1023px) {
    h1 { font-size: 2.25rem; }
    p { font-size: 1rem; }
    .prose { font-size: 1rem; }
    img { height: 20rem; }
    .grid-cols-3 { grid-template-columns: repeat(2, 1fr); }
  }
</style>